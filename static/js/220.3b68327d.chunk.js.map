{"version":3,"file":"static/js/220.3b68327d.chunk.js","mappings":"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","sources":["hooks/useUserMove.js","components/FightPlace/UserMakeMove.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeEnergy, setEnergy } from \"../redux/user/parameters\";\nimport { giveDefense } from \"../redux/user/giveSkills\";\nimport { oChangeHealth } from \"../redux/oponent/oParameters\";\nimport { makeMove } from \"../redux/user/move\";\n\nfunction useUserMove() {\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [superpower, setSuperpower] = useState(\"\");\n  const [superpowerUsed, setSuperpowerUsed] = useState(false);\n\n  //   USER's ATTACKS\n\n  function userAttack(type) {\n    if (store.parameters.health > 0) {\n      //   power of first hand weapon\n      let power = 0;\n      if (store.items.armed.firstHand.attack.length > 1) {\n        power =\n          store.items.armed.firstHand.attack[0] +\n          Math.floor(\n            (store.items.armed.firstHand.attack[1] -\n              store.items.armed.firstHand.attack[0] +\n              1) *\n              Math.random()\n          );\n      } else {\n        power = store.items.armed.firstHand.attack[0];\n      }\n\n      //   power of second hand weapon\n      let secondPower = 0;\n\n      if (store.items.armed.secondHand.type == \"second weapon\") {\n        if (store.items.armed.secondHand.attack.length > 1) {\n          secondPower =\n            store.items.armed.secondHand.attack[0] +\n            Math.floor(\n              (store.items.armed.secondHand.attack[1] -\n                store.items.armed.secondHand.attack[0] +\n                1) *\n                Math.random()\n            );\n        } else {\n          secondPower = store.items.armed.secondHand.attack[0];\n        }\n      }\n\n      // attack damage\n      let attack;\n\n      if (superpower == \"Fatal strike\") {\n        // if Fatal strike superpower was used\n        attack = store.skills[0].amount * 2 + power * 2.5;\n      } else {\n        attack =\n          store.skills[0].amount * 2 +\n          power * 2.5 -\n          store.oponentSkils.defense * 1.5;\n      }\n\n      if (store.items.armed.secondHand.type == \"shield\") {\n        if (store.oponentItems.armed.secondHand.type == \"shield\") {\n          attack -= store.oponentItems.armed.secondHand.stat[0] * 2;\n        }\n      } else {\n        if (store.oponentItems.armed.secondHand.type == \"shield\") {\n          attack +=\n            (secondPower - store.oponentItems.armed.secondHand.stat[0]) * 2;\n        } else {\n          attack += secondPower * 2;\n        }\n      }\n\n      // when attack damage is below 1, set attack on 1 so damage will not be on minus\n\n      if (attack < 1) {\n        attack = 1;\n      }\n\n      // nr decides if hit hits or miss\n\n      let nr = Math.random();\n\n      // When Giant smash or Counterattack superpower was used\n\n      if (superpower == \"Giant smash\") {\n        attack += 2 * store.skills[2].amount;\n      } else if (superpower == \"Counterattack\") {\n        attack += attack;\n      }\n\n      // what move user do?\n\n      if (type == \"rest\") {\n        dispatch(makeMove([\"rest\"]));\n        if (store.parameters.energy >= 75) {\n          if (store.parameters.energy == 100) {\n            dispatch(makeMove([\"full energy\"]));\n          } else {\n            dispatch(setEnergy());\n          }\n        } else {\n          dispatch(changeEnergy(25));\n          dispatch(makeMove([\"rest\"]));\n        }\n      } else if (type == \"deff\") {\n        dispatch(makeMove([\"defense\"]));\n        dispatch(giveDefense(0.5));\n        if (store.parameters.energy >= 85) {\n          dispatch(setEnergy());\n        } else {\n          dispatch(changeEnergy(15));\n        }\n      } else if (type == \"Giant smash\" && superpowerUsed == false) {\n        dispatch(makeMove([\"Giant smash\"]));\n        setSuperpower(\"Giant smash\");\n        setSuperpowerUsed(true);\n      } else if (type == \"Counterattack\" && superpowerUsed == false) {\n        dispatch(makeMove([\"Counterattack\"]));\n        setSuperpower(\"Counterattack\");\n        dispatch(giveDefense(0.5));\n        setSuperpowerUsed(true);\n        if (store.parameters.energy >= 85) {\n          dispatch(setEnergy());\n        } else {\n          dispatch(changeEnergy(15));\n        }\n      } else if (type == \"Fatal strike\" && superpowerUsed == false) {\n        dispatch(makeMove([\"Fatal strike\"]));\n        setSuperpower(\"Fatal strike\");\n        setSuperpowerUsed(true);\n      } else if (type == \"light\" && store.parameters.energy >= 10) {\n        dispatch(changeEnergy(-10));\n        if (nr < 0.9) {\n          dispatch(oChangeHealth(-Math.round(attack)));\n          dispatch(makeMove([\"attack\", Math.round(attack)]));\n        } else {\n          console.log(\"miss\");\n          dispatch(makeMove([\"block\"]));\n        }\n        setSuperpower(\"\");\n      } else if (type == \"normal\" && store.parameters.energy >= 15) {\n        dispatch(changeEnergy(-15));\n        if (nr < 0.7) {\n          dispatch(oChangeHealth(-Math.round(attack * 2)));\n          dispatch(makeMove([\"attack\", Math.round(attack * 2)]));\n        } else {\n          dispatch(makeMove([\"block\"]));\n        }\n        setSuperpower(\"\");\n      } else if (type == \"strong\" && store.parameters.energy >= 25) {\n        dispatch(changeEnergy(-25));\n        if (nr < 0.37) {\n          dispatch(oChangeHealth(-Math.round(attack * 5)));\n          dispatch(makeMove([\"attack\", Math.round(attack * 5)]));\n        } else {\n          dispatch(makeMove([\"block\"]));\n        }\n        setSuperpower(\"\");\n      } else {\n        dispatch(makeMove([\"no energy\"]));\n      }\n    }\n  }\n\n  return userAttack;\n}\n\nexport default useUserMove;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useSelector } from \"react-redux\";\n\nimport useUserMove from \"../../hooks/useUserMove\";\n\nimport profesion from \"../../database/profesion\";\nimport lightAttack from \"../../database/images/lightAttack.png\";\nimport mediumAttack from \"../../database/images/mediumAttack.png\";\nimport strongAttack from \"../../database/images/strongAttack.png\";\nimport superpower from \"../../database/images/superpower.png\";\nimport rest from \"../../database/images/rest.png\";\nimport shield from \"../../database/images/shield.png\";\n\nfunction UserMakeMove() {\n  const store = useSelector((state) => state);\n\n  const characterLook = profesion.find((x) => x.name == store.profesion).img;\n  const userSuperpower = profesion.find(\n    (x) => x.name == store.profesion\n  ).superpower;\n\n  // If superpower used change opacity of superpower button\n  // and make superpower info visible on superpower button hover\n\n  const [ifSuperpowerUsed, setIfSuperpowerUser] = useState(false);\n  const [showSuperpowerInfo, setShowSuperpowerInfo] = useState(false);\n  const [superpowerOpacity, setSuperpowerOpacity] = useState(1);\n  const [superpowerInfoStyle, setSuperpowerInfoStyle] = useState({});\n\n  function superpowerUsed() {\n    setSuperpowerOpacity(0.2);\n    setIfSuperpowerUser(true);\n  }\n\n  useEffect(() => {\n    if (showSuperpowerInfo == true && ifSuperpowerUsed == true) {\n      setSuperpowerInfoStyle({\n        opacity: 1,\n        visibility: \"visible\",\n      });\n    } else {\n      setSuperpowerInfoStyle({\n        opacity: 0,\n        visibility: \"hidden\",\n      });\n    }\n  }, [showSuperpowerInfo]);\n\n  const [wait, setWait] = useState(true);\n  const move = useUserMove();\n\n  function makeMove(type) {\n    if (wait && type !== userSuperpower) {\n      move(type);\n    }\n    if (wait && ifSuperpowerUsed == false && type == userSuperpower) {\n      superpowerUsed();\n      move(userSuperpower);\n    }\n  }\n\n  // user have to wait for his turn after making move\n\n  // this useEffect trigger on user energy change or user deffense change,\n  // because every user move changes energy or deffense\n\n  useEffect(() => {\n    setWait(false);\n  }, [store.skills[1].amount, store.parameters.energy]);\n\n  //  user can move 2 seconds after oponent move\n  //  2 seconds because thats how long the longest animation of opponent move takes\n\n  //  this useEffect trigger on opponent energy change,\n  //  because every move changes energy\n\n  useEffect(() => {\n    setTimeout(() => {\n      setWait(true);\n    }, 2000);\n  }, [store.oponentParameters.energy]);\n\n  return (\n    <div className=\"actionsContainer\">\n      <div className=\"defenseButtons\">\n        <div className=\"actionButton\">\n          <img\n            alt=\"deffensive move\"\n            src={shield}\n            onClick={() => makeMove(\"deff\")}\n          />\n          <div>Defense</div>\n        </div>\n        <div className=\"actionButton\">\n          <img alt=\"rest move\" src={rest} onClick={() => makeMove(\"rest\")} />\n          <div>Rest</div>\n        </div>\n      </div>\n      <img\n        alt=\"character look\"\n        className=\"characterFightImg\"\n        src={characterLook}\n      />\n      <div className=\"attackButtonsContainer\">\n        <div className=\"attackButtons\">\n          <div className=\"actionButton\">\n            <img\n              alt=\"strong attack\"\n              src={strongAttack}\n              onClick={() => makeMove(\"strong\")}\n            />\n            <div>Strong</div>\n          </div>\n          <div className=\"actionButton\">\n            <img\n              alt=\"normal attack\"\n              src={mediumAttack}\n              onClick={() => makeMove(\"normal\")}\n            />\n            <div>Medium</div>\n          </div>\n          <div className=\"actionButton\">\n            <img\n              alt=\"light attack\"\n              src={lightAttack}\n              onClick={() => makeMove(\"light\")}\n            />\n            <div>Light</div>\n          </div>\n          <div className=\"superpowerButton\">\n            <div className=\"actionButton\">\n              <img\n                alt=\"superpower move\"\n                src={superpower}\n                style={{ opacity: superpowerOpacity }}\n                onMouseOver={() => setShowSuperpowerInfo(true)}\n                onMouseLeave={() => setShowSuperpowerInfo(false)}\n                onClick={() => makeMove(userSuperpower)}\n              />\n              <div>\n                {profesion.find((x) => x.name == store.profesion).superpower}\n              </div>\n            </div>\n            <div style={superpowerInfoStyle} className=\"superpowerUsed\">\n              You can use{\" \"}\n              {profesion.find((x) => x.name == store.profesion).superpower} only\n              once.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserMakeMove;\n"],"names":["store","useSelector","state","dispatch","useDispatch","useState","superpower","setSuperpower","superpowerUsed","setSuperpowerUsed","type","parameters","health","power","items","armed","firstHand","attack","length","Math","floor","random","secondPower","secondHand","skills","amount","oponentSkils","defense","oponentItems","stat","nr","makeMove","energy","setEnergy","changeEnergy","giveDefense","oChangeHealth","round","console","log","characterLook","profesion","x","name","img","userSuperpower","ifSuperpowerUsed","setIfSuperpowerUser","showSuperpowerInfo","setShowSuperpowerInfo","superpowerOpacity","setSuperpowerOpacity","superpowerInfoStyle","setSuperpowerInfoStyle","useEffect","opacity","visibility","wait","setWait","move","useUserMove","setTimeout","oponentParameters","className","alt","src","shield","onClick","rest","strongAttack","mediumAttack","lightAttack","style","onMouseOver","onMouseLeave"],"sourceRoot":""}