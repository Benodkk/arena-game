{"version":3,"file":"static/js/858.23fc9073.chunk.js","mappings":"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","sources":["hooks/useLeaveFight.js","components/FightPlace/FinishFight.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { changeMoney } from \"../redux/user/money\";\nimport { giveExp } from \"../redux/user/exp\";\nimport { levelUp } from \"../redux/user/level\";\nimport { resetExp } from \"../redux/user/exp\";\nimport { loss, win } from \"../redux/user/stats\";\n\nimport levels from \"../database/levels\";\n\nfunction useLeaveFight() {\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  function leaveFight() {\n    // Win or lose\n\n    if (store.parameters.health <= 0) {\n      dispatch(giveExp(100));\n      dispatch(loss());\n    }\n    if (store.oponentParameters.health <= 0) {\n      dispatch(giveExp(100));\n      dispatch(changeMoney(100));\n      dispatch(win());\n    }\n\n    // if level up\n\n    let lvl = levels.find((x) => x.level == store.level);\n    if (store.level == lvl.level && store.exp == lvl.promotion - 100) {\n      dispatch(levelUp());\n      dispatch(resetExp());\n    }\n  }\n\n  return leaveFight;\n}\n\nexport default useLeaveFight;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport useLeaveFight from \"../../hooks/useLeaveFight\";\nimport useBlackScreenOn from \"../../hooks/useBlackScreenOn\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetDefense } from \"../../redux/user/giveSkills\";\nimport { blackOn } from \"../../redux/blackOn\";\n\nimport victory from \"../../database/images/victory.png\";\nimport defeat from \"../../database/images/defeat.png\";\nimport coin from \"../../database/images/coin.png\";\n\nfunction FinishFight() {\n  const navigate = useNavigate();\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [blackScreenStyle, goBlack] = useBlackScreenOn();\n  const leave = useLeaveFight();\n\n  // reset deffense after fight\n\n  const [defChanged, setDefChanged] = useState(false);\n  const [currentDef, setCurrentDef] = useState(0);\n\n  if (defChanged == false) {\n    setDefChanged(true);\n    setCurrentDef(store.skills[1].amount);\n  }\n\n  const [nextStep, setNextStep] = useState(\"\");\n\n  useEffect(() => {\n    // if level up you get skills points to give\n    if (store.exp == 0) {\n      setNextStep(\"/give-skills\");\n    } else {\n      setNextStep(\"/menu\");\n    }\n  }, [store.exp]);\n\n  function leaveFight() {\n    dispatch(resetDefense(currentDef));\n    dispatch(blackOn());\n    setDefChanged(false);\n    goBlack();\n    setTimeout(() => {\n      navigate(nextStep);\n    }, 1000);\n  }\n\n  const [endFightImage, setEndFightImage] = useState(\"\");\n  const [money, setMoney] = useState();\n\n  const [fightStyle, setFightStyle] = useState({});\n  const [imgAnimation, setImgAnimation] = useState({});\n  const [rewardsAnimation, setRewardsAnimation] = useState({});\n\n  useEffect(() => {\n    // when win or defeat\n\n    if (store.parameters.health <= 0) {\n      setEndFightImage(defeat);\n      setMoney(0);\n    }\n    if (store.oponentParameters.health <= 0) {\n      setEndFightImage(victory);\n      setMoney(100);\n    }\n\n    // show FinishFight component when fight is finished\n\n    if (store.parameters.health <= 0 || store.oponentParameters.health <= 0) {\n      setTimeout(() => {\n        setFightStyle({ visibility: \"visible\", opacity: 1 });\n      }, 1500);\n\n      setTimeout(() => {\n        setImgAnimation({\n          animation: \"dead 0.4s ease-in\",\n          opacity: 1,\n          visibility: \"visible\",\n          transform: \"scale(1)\",\n        });\n      }, 2300);\n      setTimeout(() => {\n        setRewardsAnimation({\n          transform: \"translateY(0vh)\",\n        });\n      }, 2800);\n      leave();\n    }\n  }, [store.parameters.health, store.oponentParameters.health]);\n\n  return (\n    <div className=\"finishFightContainer\" style={fightStyle}>\n      <div style={blackScreenStyle}></div>\n      <div className=\"blackOut\"></div>\n      <div className=\"fightFinished\">\n        <img\n          alt=\"Fight finished\"\n          className=\"endFightImg\"\n          src={endFightImage}\n          style={imgAnimation}\n        />\n        <div className=\"rewardsContainer\" style={rewardsAnimation}>\n          <div>Rewards</div>\n          <div className=\"rewards\">\n            <div>100 exp</div>\n            <div>\n              {money}\n              <img alt=\"coin\" src={coin} />\n            </div>\n          </div>\n        </div>\n        <div style={rewardsAnimation} className=\"nextStepBtn\">\n          <button onClick={leaveFight}>Next</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FinishFight;\n"],"names":["store","useSelector","state","dispatch","useDispatch","parameters","health","giveExp","loss","oponentParameters","changeMoney","win","lvl","levels","x","level","exp","promotion","levelUp","resetExp","navigate","useNavigate","useBlackScreenOn","blackScreenStyle","goBlack","leave","useLeaveFight","useState","defChanged","setDefChanged","currentDef","setCurrentDef","skills","amount","nextStep","setNextStep","useEffect","endFightImage","setEndFightImage","money","setMoney","fightStyle","setFightStyle","imgAnimation","setImgAnimation","rewardsAnimation","setRewardsAnimation","defeat","victory","setTimeout","visibility","opacity","animation","transform","className","style","alt","src","coin","onClick","resetDefense","blackOn"],"sourceRoot":""}